# ui stuff
colorscheme gruvbox
add-highlighter global/ number-lines
add-highlighter global/ wrap
add-highlighter global/ show-matching

# clipboard: leader {y,p}
map global user p -docstring 'paste from clipboard' '!xsel -bo<ret>uU'
map global user y -docstring 'copy to clipboard' '<a-|>xsel -bi<ret>'

# fzf stuff
source "~/.config/nixpkgs/kak/plugins/fzf.kak/rc/fzf.kak"
source "~/.config/nixpkgs/kak/plugins/fzf.kak/rc/modules/fzf-file.kak"   # fzf file chooser
source "~/.config/nixpkgs/kak/plugins/fzf.kak/rc/modules/fzf-buffer.kak" # switching buffers with fzf
source "~/.config/nixpkgs/kak/plugins/fzf.kak/rc/modules/fzf-search.kak" # search within file contents
source "~/.config/nixpkgs/kak/plugins/fzf.kak/rc/modules/fzf-vcs.kak" # VCS base module
source "~/.config/nixpkgs/kak/plugins/fzf.kak/rc/modules/VCS/fzf-git.kak" # Git support module
require-module fzf_vcs
require-module fzf

map global normal '<c-t>' ': fzf-vcs<ret>'

# janet
source "~/.config/nixpkgs/kak/plugins/janet.kak/rc/janet.kak"
source "~/.config/nixpkgs/kak/plugins/surround.kak"
map global user -docstring 'Janet mode' j ': enter-user-mode janet<ret>'


# search
map global normal / '/(?i)(?S)'

# grep to rg
set-option global grepcmd 'rg --column --with-filename'

# comments
map global normal '#' ': comment-line<ret>'

# buffers
map global normal '<c-b>' ': fzf-buffer<ret>'

# spaces tab stuf
set global indentwidth 4
set global tabstop 4

# lsp stuff
eval %sh{kak-lsp --kakoune -s $kak_session}

hook global WinSetOption filetype=(rust|zig|c|cpp|python) %{
   lsp-enable-window
}

# lisp
source "~/.config/nixpkgs/kak/plugins/parinfer.kak"
source "~/.config/nixpkgs/kak/plugins/racket.kak"
hook global WinSetOption filetype=(clojure|lisp|scheme|racket) %{
        parinfer-enable-window -smart
}
# formatting

hook global WinSetOption filetype=(rust|zig|js|python) %{
    hook window BufWritePre .* format
}



hook global WinSetOption filetype=zig %{
    set-option buffer formatcmd 'zig fmt --stdin'
    set-option buffer makecmd 'zig build&&echo done'
}

hook global WinSetOption filetype=rust %{
    set-option buffer formatcmd 'rustfmt'
}
hook global WinSetOption filetype=python %{
    set-option buffer formatcmd 'black -q -'
}

hook global WinSetOption filetype=(cpp|c|java|javascript) %{
    set-option buffer formatcmd 'clang-format'
}
hook global WinSetOption filetype=(c) %{
    # we want tabs for these filetypes
    set global indentwidth 0
}



lsp-auto-hover-enable
lsp-auto-signature-help-enable

map global goto 'n' '<esc>: lsp-find-error --include-warnings<ret>' -docstring 'next error'
map global goto 'p' '<esc>: lsp-find-error --previous --include-warnings <ret>' -docstring 'previous error'

set global lsp_hover_max_lines 20 # update 40 with your preference of how many lines to cut
## for lsp log
#set-option global lsp_cmd "kak-lsp -s %val{session} -vvv --log /tmp/kak-lsp.log"
